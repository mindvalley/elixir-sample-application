name: Elixir CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.14.2' # Define the elixir version [required]
        otp-version: '25.2' # Define the OTP version [required]
    - name: Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install dependencies
      run: mix deps.get

    - name: Compile
      run: mix compile

    - name: Run Sobelow and capture JSON file
      id: run-sobelow
      run: |
          mix sobelow --format json > sobelow.json

    - name: Post Sobelow Findings comment
      id: post-sobelow-findings
      uses: actions/github-script@v2.1.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
    
          const sobelowJson = fs.readFileSync('sobelow.json', 'utf8');
          const findings = JSON.parse(sobelowJson);
    
          let commentBody = '';
    
          if (findings.total_findings > 0) {
            commentBody += 'Sobelow Findings:\n\n';
    
            Object.entries(findings.findings).forEach(([confidence, items]) => {
              if (items.length > 0) {
                let severityIcon = '';
    
                // Set severity icon based on confidence level
                switch (confidence) {
                    case 'high_confidence':
                      severityIcon = ':skull_and_crossbones:';
                      break;
                    case 'medium_confidence':
                      severityIcon = ':warning:';
                      break;
                    case 'low_confidence':
                      severityIcon = ':sun_with_face:';
                      break;
                    default:
                      severityIcon = '';
                  }
    
                // Add severity level heading with icon
                commentBody += `${severityIcon} ${confidence.charAt(0).toUpperCase() + confidence.slice(1)} Severity Findings:\n\n`;
    
                items.forEach((finding) => {
                  commentBody += `- ${finding.type} found in ${finding.file} (line ${finding.line})\n`;
                });
    
                commentBody += '\n';
              }
            });
    
            commentBody += `Total Findings: ${findings.total_findings}`;
          } else {
            commentBody = 'Your code has achieved Jedi-level security! Sobelow senses no vulnerabilities';
          }
    
          github.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.payload.pull_request.number,
            body: commentBody
          });

    - name: Exit Pipeline if Sobelow Findings
      if: steps.post-sobelow-findings.outputs.commentBody != 'Your code has achieved Jedi-level security! Sobelow senses no vulnerabilities'
      run: exit 1